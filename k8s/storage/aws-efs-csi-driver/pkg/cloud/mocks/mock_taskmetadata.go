// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubernetes-sigs/aws-efs-csi-driver/pkg/cloud (interfaces: TaskMetadataService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTaskMetadataService is a mock of TaskMetadataService interface.
type MockTaskMetadataService struct {
	ctrl     *gomock.Controller
	recorder *MockTaskMetadataServiceMockRecorder
}

// MockTaskMetadataServiceMockRecorder is the mock recorder for MockTaskMetadataService.
type MockTaskMetadataServiceMockRecorder struct {
	mock *MockTaskMetadataService
}

// NewMockTaskMetadataService creates a new mock instance.
func NewMockTaskMetadataService(ctrl *gomock.Controller) *MockTaskMetadataService {
	mock := &MockTaskMetadataService{ctrl: ctrl}
	mock.recorder = &MockTaskMetadataServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskMetadataService) EXPECT() *MockTaskMetadataServiceMockRecorder {
	return m.recorder
}

// GetTMDSV4Response mocks base method.
func (m *MockTaskMetadataService) GetTMDSV4Response() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTMDSV4Response")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTMDSV4Response indicates an expected call of GetTMDSV4Response.
func (mr *MockTaskMetadataServiceMockRecorder) GetTMDSV4Response() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTMDSV4Response", reflect.TypeOf((*MockTaskMetadataService)(nil).GetTMDSV4Response))
}
